[PolicyInput(type='task', source={}, project=None, playbooks={'__in_memory__': Playbook(type='playbook', key='playbook playbook:__in_memory__', name='__in_memory__', filepath='__in_memory__', yaml_lines='---\n- name: Provision EC2 instance on AWS\n  hosts: localhost\n  gather_facts: false\n  vars:\n    region: "your_aws_region"\n    instance_type: "t1.micro"\n    ami_id: "your_ami_id"\n    key_name: "your_key_name"\n    security_group: "your_security_group_id"\n    subnet_id: "your_subnet_id"\n  tasks:\n    - name: Create EC2 instance\n      amazon.aws.ec2_instance:\n        region: "{{ region }}"\n        key_name: "{{ key_name }}"\n        instance_type: "{{ instance_type }}"\n        image_id: "{{ ami_id }}"\n        security_group: "{{ security_group }}"\n        subnet_id: "{{ subnet_id }}"\n        assign_public_ip: true\n        wait: yes\n        count: 1\n        instance_tags:\n          Name: "MySQLInstance"\n      register: ec2\n', role='', collection='', play_keys=['play playbook:__in_memory__#play:[0]'], variables={}, options={}, tasks=[Task(type='task', key='task playbook:__in_memory__#play:[0]#task:[0]', name='Create EC2 instance', module='amazon.aws.ec2_instance', index=0, play_index=0, filepath='__in_memory__', role='', collection='', become=None, variables={}, module_defaults={}, registered_variables={'ec2': 'task playbook:__in_memory__#play:[0]#task:[0]'}, set_facts={}, loop={}, options={'name': 'Create EC2 instance', 'register': 'ec2'}, module_options={'region': '{{ region }}', 'key_name': '{{ key_name }}', 'instance_type': '{{ instance_type }}', 'image_id': '{{ ami_id }}', 'security_group': '{{ security_group }}', 'subnet_id': '{{ subnet_id }}', 'assign_public_ip': True, 'wait': True, 'count': 1, 'instance_tags': {'Name': 'MySQLInstance'}}, executable='amazon.aws.ec2_instance', executable_type='Module', collections_in_play=[], yaml_lines='    - name: Create EC2 instance\n      amazon.aws.ec2_instance:\n        region: "{{ region }}"\n        key_name: "{{ key_name }}"\n        instance_type: "{{ instance_type }}"\n        image_id: "{{ ami_id }}"\n        security_group: "{{ security_group }}"\n        subnet_id: "{{ subnet_id }}"\n        assign_public_ip: true\n        wait: yes\n        count: 1\n        instance_tags:\n          Name: "MySQLInstance"\n      register: ec2', line_num_in_file=[13, 27], resolved_name='', possible_candidates=[], module_info={}, include_info={}, module_fqcn='amazon.aws.ec2_instance')], plays=[Play(type='play', name='Provision EC2 instance on AWS', filepath='__in_memory__', index=0, key='play playbook:__in_memory__#play:[0]', local_key='play playbook:__in_memory__#play:[0]', role='', collection='', import_module='', import_playbook='', pre_tasks=[], tasks=[Task(type='task', key='task playbook:__in_memory__#play:[0]#task:[0]', name='Create EC2 instance', module='amazon.aws.ec2_instance', index=0, play_index=0, filepath='__in_memory__', role='', collection='', become=None, variables={}, module_defaults={}, registered_variables={'ec2': 'task playbook:__in_memory__#play:[0]#task:[0]'}, set_facts={}, loop={}, options={'name': 'Create EC2 instance', 'register': 'ec2'}, module_options={'region': '{{ region }}', 'key_name': '{{ key_name }}', 'instance_type': '{{ instance_type }}', 'image_id': '{{ ami_id }}', 'security_group': '{{ security_group }}', 'subnet_id': '{{ subnet_id }}', 'assign_public_ip': True, 'wait': True, 'count': 1, 'instance_tags': {'Name': 'MySQLInstance'}}, executable='amazon.aws.ec2_instance', executable_type='Module', collections_in_play=[], yaml_lines='    - name: Create EC2 instance\n      amazon.aws.ec2_instance:\n        region: "{{ region }}"\n        key_name: "{{ key_name }}"\n        instance_type: "{{ instance_type }}"\n        image_id: "{{ ami_id }}"\n        security_group: "{{ security_group }}"\n        subnet_id: "{{ subnet_id }}"\n        assign_public_ip: true\n        wait: yes\n        count: 1\n        instance_tags:\n          Name: "MySQLInstance"\n      register: ec2', line_num_in_file=[13, 27], resolved_name='', possible_candidates=[], module_info={}, include_info={}, module_fqcn='amazon.aws.ec2_instance')], post_tasks=[], handlers=[], roles=[], module_defaults={}, options={'hosts': 'localhost', 'gather_facts': False}, collections_in_play=[], become=None, variables={'region': 'your_aws_region', 'instance_type': 't1.micro', 'ami_id': 'your_ami_id', 'key_name': 'your_key_name', 'security_group': 'your_security_group_id', 'subnet_id': 'your_subnet_id'}, vars_files=[], task_loading={'total': 1, 'success': 1, 'failure': 0, 'errors': []})])}, taskfiles={}, roles={}, task=Task(type='task', key='task playbook:__in_memory__#play:[0]#task:[0]', name='Create EC2 instance', module='amazon.aws.ec2_instance', index=0, play_index=0, filepath='__in_memory__', role='', collection='', become=None, variables={}, module_defaults={}, registered_variables={'ec2': 'task playbook:__in_memory__#play:[0]#task:[0]'}, set_facts={}, loop={}, options={'name': 'Create EC2 instance', 'register': 'ec2'}, module_options={'region': '{{ region }}', 'key_name': '{{ key_name }}', 'instance_type': '{{ instance_type }}', 'image_id': '{{ ami_id }}', 'security_group': '{{ security_group }}', 'subnet_id': '{{ subnet_id }}', 'assign_public_ip': True, 'wait': True, 'count': 1, 'instance_tags': {'Name': 'MySQLInstance'}}, executable='amazon.aws.ec2_instance', executable_type='Module', collections_in_play=[], yaml_lines='    - name: Create EC2 instance\n      amazon.aws.ec2_instance:\n        region: "{{ region }}"\n        key_name: "{{ key_name }}"\n        instance_type: "{{ instance_type }}"\n        image_id: "{{ ami_id }}"\n        security_group: "{{ security_group }}"\n        subnet_id: "{{ subnet_id }}"\n        assign_public_ip: true\n        wait: yes\n        count: 1\n        instance_tags:\n          Name: "MySQLInstance"\n      register: ec2', line_num_in_file=[13, 27], resolved_name='', possible_candidates=[], module_info={'collection': 'amazon.aws', 'fqcn': 'amazon.aws.ec2_instance', 'key': '__unknown__', 'short_name': 'ec2_instance'}, include_info={}, module_fqcn='amazon.aws.ec2_instance'), play=None, role=None, task_result=None, event=None, rest=None, vars_files={}, extra_vars={}, variables={})]
--------------------------------------------------------------------------------
SUMMARY
... Total files: 1, Validated: 1, Not Validated: 0

No violations are detected

